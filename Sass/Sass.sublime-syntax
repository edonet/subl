%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html

# =======================
# 定义语法信息
# =======================
name: Sass
file_extensions:
  - css
  - scss
  - sass
scope: source.sass

# =======================
# 定义变量
# =======================
variables:

  # 数字
  integer: '(?:[-+]?\d+)'
  number: '[-+]?(?:(?:\d*\.\d+(?:[eE]{{integer}})*)|{{integer}})'

  # 单位
  unit: 'em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|q|in|pt|pc|px|fr|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx|%'

  # 浏览器厂商前缀
  vendor: '(-webkit-|-moz-|-ms-|-o-)'

  # 属性名
  align: 'align-content|align-items|align-self|alignment-adjust|alignment-baseline|alignment|vertical-align|baseline-shift|inline-box-align|child-align'
  animation: 'animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|animation'
  background: 'background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|background'
  border: 'border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-bottom|border-clip-bottom|border-clip-left|border-clip-right|border-clip-top|border-clip|border-color|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-widthborder-collapse|border-image|border-left-color|border-left-style|border-left-width|border-left|border-limit|border-radius|border-right-color|border-right-style|border-right-width|border-right|border-spacing|border-style|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-top|border-width|border'
  box: 'box-decoration-break|box-shadow|box-sizing|box-snap|box-suppress'
  color: 'color-adjust|color-correction|color-interpolation|color-interpolation-filters|color'
  counter: 'counter-increment|counter-reset|counter-set'
  column: 'column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns'
  display: 'display-inside|display-list|display-outside|display|opacity|visibility'
  flex: 'flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|flex'
  float: 'float-defer-column|float-defer-page|float-displace|float-offset|float-wrap|float|clear-after|clear-side|clear'
  font: 'src|font-family|font-feature-settings|font-kerning|font-language-override|font-size-adjust|font-size|font-stretch|font-style|font-synthesis|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-variant|font-weight|font'
  grid: 'grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column-end|grid-column-start|grid-column|grid-row-end|grid-row-start|grid-row|grid-template-areas|grid-template-columns|grid-template-rows|grid-template|grid'
  justify: 'justify-content|justify-items|justify-self'
  line: 'line-break|line-grid|line-height|line-snap|line-stacking-ruby|line-stacking-shift|line-stacking-strategy|line-stacking'
  list: 'list-style-image|list-style-position|list-style-type|list-style'
  margin: 'margin-bottom|margin-left|margin-right|margin-top|marker-side|margin'
  mask: 'mask-border-mode|mask-border-outset|mask-border-repeat|mask-border-slice|mask-border-source|mask-border-width|mask-border|mask-clip|mask-composite|mask-image|mask-mode|mask-origin|mask-position|mask-repeat|mask-size|mask-type|mask|clip-path|clip-rule'
  motion: 'motion-offset|motion-path|motion-rotation|motion'
  outline: 'outline-color|outline-offset|outline-style|outline-width|outline'
  offset: 'offset-after|offset-before|offset-end|offset-start'
  overflow: 'overflow-style|overflow-wrap|overflow-x|overflow-y|overflow'
  padding: 'padding-bottom|padding-left|padding-right|padding-top|padding'
  position: 'position|left|right|top|bottom|z-index'
  size: 'height|width|max-height|max-width|min-height|min-width|zoom|max-zoom|min-zoom|max-lines|initial-scale|min-scale|max-scale|user-zoom'
  scroll: 'scrollbar-face-color|scrollbar-highlight-color|scrollbar-shadow-color|scrollbar-3Dlight-color|scrollbar-arrow-color|scrollbar-track-color|scrollbar-darkshadow-color|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-points-x|scroll-snap-points-y|scroll-snap-type'
  shape: 'shape-image-threshold|shape-margin|shape-outside|image-orientation|image-resolution'
  text: 'direction|text-align-last|text-align|text-combine-upright|text-decoration-color|text-decoration-line|text-decoration-skip|text-decoration-style|text-decoration|text-emphasis-color|text-emphasis-position|text-emphasis-style|text-emphasis|text-height|text-indent|text-justify|text-orientation|text-overflow|text-shadow|text-transform|text-underline-position|font-smoothing|text-stroke-width|osx-font-smoothing'
  transform: 'transform-box|transform-origin|transform-style|transform|perspective|perspective-origin'
  transition: 'transition-delay|transition-duration|transition-property|transition-timing-function|transition'
  voice: 'voice-balance|voice-duration|voice-family|voice-pitch|voice-range|voice-rate|voice-stress|voice-volume'
  letter: 'letter-spacing|writing-mode|white-space|word-break|word-spacing|word-wrap|wrap-flow|wrap-through|break-after|break-before|break-inside|speak-as|speak|initial-letter|initial-letter-align'
  common: 'content|cursor|filter|lighting-color|marks|orientation|pointer-events|widows|appearance|resize'
  svg: 'fill-opacity|fill-rule|fill|stroke-width|stroke-dasharray|stroke-dashoffset|stroke-linecap|stroke-linejoin|stroke-miterlimit|stroke-opacity|stroke'
  props: '({{align}}|{{animation}}|{{background}}|{{border}}|{{box}}|{{color}}|{{counter}}|{{column}}|{{display}}|{{flex}}|{{float}}|{{font}}|{{grid}}|{{justify}}|{{line}}|{{list}}|{{margin}}|{{mask}}|{{motion}}|{{outline}}|{{offset}}|{{overflow}}|{{padding}}|{{position}}|{{size}}|{{scroll}}|{{shape}}|{{text}}|{{transform}}|{{transition}}|{{voice}}|{{letter}}|{{common}}|{{svg}})'

  # 字体名
  fontName: 'arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace'


# =======================
# 定义语法内容
# =======================
contexts:

  # =======================
  # 定义语法规则
  # =======================
  main:
    - include: comment
    - include: quoted
    - include: at-rule
    - include: type-selector
    - include: type-defined
    - include: type-function
    - include: type-paramter
    - include: type-paramter-decode
    - include: type-nested-parens


  # =======================
  # 定义基本语法
  # =======================

  # 注释
  comment:
    - include: comment-line
    - include: comment-block

  # 行注释
  comment-line:
    - match: //
      push:
        - meta_scope: comment.line.double-slash.sass
        - match: $\n?
          pop: true

  # 块注释
  comment-block:
    - match: /\*
      push:
        - meta_scope: comment.block.sass
        - match: \*/
          pop: true


  # 引号
  quoted:
    - include: quoted-single
    - include: quoted-double

  # 双引号字符串
  quoted-double:
    - match: '"'
      push:
        - meta_scope: string.quoted.double.sass
        - match: '"'
          pop: true
        - match: \\.
          scope: constant.character.escaped.sass

  # 单引号字符串
  quoted-single:
    - match: "'"
      push:
        - meta_scope: string.quoted.single.sass
        - match: "'"
          pop: true
        - match: \\('|")
          scope: constant.character.escaped.sass


  # =======================
  # @ 规则
  # =======================

  at-rule:
    - match: '((@)(charset|import|font-face|namespace|viewport))\b'
      scope: keyword.control.sass
    - match: '@(at-root|debug|error|extend|for|each|return|warn|while|if|else if|else|content)\b'
      scope: keyword.control.sass
    - match: '(@include)\s([\w-]+)\(?'
      captures:
        1: keyword.control.sass
        2: support.function.sass
    - match: '(?<=\s)(in|from|to|through)(?=\s)'
      scope: keyword.control.sass
    - match: '&(?=[:\.\[\s])'
      scope: keyword.control.sass
    - include: at-media
    - include: at-supports
    - include: at-keyframes
    - include: at-page
    - include: at-function

  at-media:
    - match: '(@)(media)(?=\s)'
      scope: keyword.control.at-rule.sass
      captures:
        1: punctuation.definition.entity.sass
        2: keyword.control.at-media.sass
      push:
        - match: '(?<=\{)'
          pop: true
        - match: '(?i)\s*(only|not|and)?\s*(all|aural|braille|embossed|handheld|print|projection|screen|speech|tty|tv)?'
          captures:
            1: keyword.operator.logic.media.sass
            2: support.constant.media.sass
        - include: type-bracket

  at-supports:
    - match: '(@)(supports)(?=\s)'
      scope: keyword.control.at-rule.sass
      captures:
        1: punctuation.definition.entity.sass
        2: keyword.control.at-supports.sass
      push:
        - match: '(?<=\{)'
          pop: true
        - match: '(?<=\s)not(?=\s)'
          scope: keyword.operator.logic.media.sass
        - include: type-bracket

  at-keyframes:
    - match: '(@)({{vendor}}?keyframes)\s([\w-]+)\s(?=\{)'
      scope: keyword.control.at-rule.sass
      captures:
        1: punctuation.definition.entity.sass
        2: keyword.control.at-keyframes.sass
        3: string.unquoted.at-keyframes.name.sass

  at-page:
    - match: '((@)(page))\s*((:)(first|left|right))?\s*(?=\{)'
      captures:
        1: keyword.control.at-rule.sass
        2: punctuation.definition.keyword.sass
        3: keyword.control.at-rule.page.sass
        4: entity.other.attribute-name.at-rule.pseudo-class.sass
        5: punctuation.definition.entity.sass

  at-function:
    - match: '((@)(function|mixin))\s([\w-]+)\('
      captures:
        1: keyword.control.at-rule.sass
        2: punctuation.definition.entity.sass
        3: keyword.control.at-mixin.sass
        4: entity.name.type
      push:
        - match: '\)'
          pop: true
        - include: type-value




  # =======================
  # 定义基础值类型
  # =======================
  type-value:
    - include: comment
    - include: quoted
    - include: type-color
    - include: type-number
    - include: type-function
    - include: type-font
    - include: type-operator
    - include: type-paramter
    - include: type-property-name
    - include: type-property-value
    - include: type-paramter-decode
    - include: type-unquoted-string
    - include: type-bracket

  type-color:
    - include: Packages/Sass/syntax/color.sublime-syntax

  type-number:
    - match: '(?<=[\s\(\,]){{number}}({{unit}})?(?=[\s\),;])'
      scope: constant.numeric.sass
      captures:
        1: keyword.other.unit.sass
    - match: '(?<=[\s\(\,])\\e[0-9a-fA-F]+(?=[\s\),;])'
      scope: constant.numeric.sass

  type-function:
    - match: '(?<=(?:\s|\(|^))([\w-]+)(\()'
      captures:
        1: support.function.sass
        2: punctuation.definition.entity.sass
      push:
        - match: '\)'
          scope: punctuation.definition.entity.sass
          pop: true
        - include: type-value

  type-font:
    - match: '(?<=\s)({{fontName}})(?=[\s\),;])'
      scope: support.constant.font-name.sass

  type-paramter:
    - match: '(\$[\w-]+)(\.{3})?'
      captures:
        1: variable.parameter.sass
        2: keyword.control.sass

  type-paramter-decode:
    - match: '#\{'
      scope: keyword.control.sass
      push:
        - match: '\}'
          scope: keyword.control.sass
          pop: true
        - include: type-paramter

  type-operator:
    - match: '(?<=\s)([>\+\/\-%=\*!]+)(?=\s)'
      scope: keyword.control.sass

  type-unquoted-string:
    - match: '(?<=[\s\(])[\w\.\-\/]+'
      scope: string.unquoted.sass
      push:
        - match: '[\w\.\-\/]*(?=[\s\)\;])'
          scope: string.unquoted.sass
          pop: true
        - include: type-paramter-decode

  type-bracket:
    - match: '(?<=\s)\('
      push:
        - match: '\)'
          pop: true
        - match: '([\w-]+)(?=:\s)'
          scope: support.constant.property-name.sass
        - include: type-value

  type-nested-parens:
    - match: '\{'
      push:
        - match: '\}'
          pop: true
        - include: comment
        - include: quoted
        - include: at-rule
        - include: type-function
        - include: type-property
        - include: type-selector
        - include: type-defined
        - include: type-value
        - include: type-nested-parens


  # =======================
  # 定义变量
  # =======================
  type-defined:
    - match: '\$[\w-]+(?=:\s)'
      scope: variable.parameter.sass
      push:
        - meta_scope: meta.parameter-value.sass
        - match: ';'
          pop: true
        - include: type-value


  # =======================
  # 定义标签属性
  # =======================
  type-selector:
    - include: type-tag
    - include: type-id
    - include: type-class
    - include: type-attr
    - include: type-pseudo-class

  # 标签
  type-tag:
    - include: Packages/Sass/syntax/tag.sublime-syntax

  # id
  type-id:
    - match: '(#)([\w-]+)'
      scope: entity.other.attribute-name.id.sass
      captures:
        1: punctuation.definition.entity.sass
        2: entity.name.type

  # 类
  type-class:
    - match: '(\.|%)([\w-]+)'
      scope: entity.other.attribute-name.class.sass
      captures:
        1: punctuation.definition.entity.sass
        2: entity.name.type

  # 标签属性
  type-attr:
    - match: '\[([\w-:]+)(?:(=)(.*))?\]'
      captures:
        1: entity.other.attribute-name.tag.sass
        2: entity.name.tag.wildcard.sass
        3: string.unquoted.sass

  # 伪元素和伪类
  type-pseudo-class:
    - match: ':(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)'
      scope: entity.other.attribute-name.tag.pseudo-class.sass
    - match: '::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value|placeholder)'
      scope: entity.other.attribute-name.tag.pseudo-element.sass
    - match: '::?(-webkit-|-moz-|-ms-|-o-)[\w-]+'
      scope: entity.other.attribute-name.tag.pseudo.sass

  # 属性
  type-property:
    - match: '\s{{vendor}}?{{props}}(?=:\s?)'
      scope: support.constant.property-name.sass
      push:
        - meta_scope: meta.property-value.sass
        - match: ';'
          pop: true
        - include: type-value

  # 过渡属性
  type-property-name:
    - match: '(?<=\s){{vendor}}?{{props}}(?=\s)'
      scope: support.constant.property-name.sass

  # 值
  type-property-value:
    - include: Packages/Sass/syntax/value.sublime-syntax
